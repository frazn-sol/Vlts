.row-fluid.sortable
  .box.span12
    .box-header.well{"data-original-title" => ""}
      %h2
        %i.icon-warning-sign.icon-white
        Vehicles Tracking Screen
    .box-content
      %h2
        %i.icon-search{:style => "bottom: 3px; position: relative;"}
        Track Search
      = form_for @search, :url => track_vehicles_path, :method => "get"  do |f|
        .field.allign
          = f.label :plate_number
          -if @vehicle.present?
            = f.text_field :platenumber_like, :required => true, :value => @vehicle[0].platenumber
          -else
            = f.text_field :platenumber_like, :required => true  
          %span.suggestion
            (Plese select from suggestions)
        .actions  
          = button_tag(type: 'submit', class: "push btn btn-primary search", id: "search") do 
            <i class="icon-search icon-white"></i>
          = button_tag(type: 'submit', class: "push btn btn-success shift", id: "addbutton", :name => 'add_button') do 
            <i class="icon-plus icon-white"></i>
          -if @vehicle.present?    
            = link_to "<i class=\"icon-pencil icon-white\"></i>".html_safe, edit_vehicle_path(@vehicle[0]), :class => "btn btn-warning place"    
      -if @vehicle.present?
        %h2
          %i.icon-list{:style => "bottom: 3px; position: relative;"}
          Vehicle Information
        #vehicle
          %label
            Vehicle:
          %span
            =@vehicle[0].platenumber
          %label
            Driver name:
          %span
            =@vehicle[0].driver_first_name + " " + @vehicle[0].driver_middle_name + " " + @vehicle[0].driver_last_name
          %label
            Organization:
          %span
            -if @vehicle[0].organization.present?
              =@vehicle[0].organization.company_name 
          %br
          %label
            Colour:
          %span
            =@vehicle[0].colour
          %label
            Make:
          %span
            =@vehicle[0].make
          %label
            Model:
          %span
            =@vehicle[0].model
          %br        
          %label
            Permit Date:
          %span
            =@vehicle[0].permit_date 
          %label
            Expiry Date:
          %span
            =@vehicle[0].expiry_date 
          %label
            Visitor:
          %span
            =@vehicle[0].visitor 
          %br 
          %label
            Badge number:
          %span
            =@vehicle[0].badge_number
          %br  
        %h3
          Locations Found: 
          = button_tag(type: 'submit', class: "push btn btn-primary", id: "addlocation") do 
            <i class="icon-plus icon-white"></i> 
            Add New  
      .clear      
      %table.table.table-striped.table-bordered
        %thead
          %tr
            %th Date & Time
            %th Floor
            %th Location
            %th Slot
            %th Remove
            %th Parking Time
            %th Remarks    
            %th Actions 
            -if @history.present?   
              - @history.each do |history|
                %tbody
                  %tr
                    %td= history.created_at.strftime("%d %b. %Y at %H:%M")
                    %td= history.floor.nickname if history.floor.present?
                    %td= history.location.nickname if history.location.present?
                    %td= history.slot
                    -if history.remove_flag != true
                      %td= link_to "<i class=\"icon-minus icon-white\"></i> Remove".html_safe, "#", :class => "btn btn-primary removebtn", :id => "#{history.id}"
                      %td{:id => "parking_#{history.id}"}= ((Time.now - history.created_at)/3600).to_s.split(".")[0] + " hours and " +((Time.now - history.created_at)/3600).round(2).to_s.split(".")[1] + " minutes"
                    -else
                      %td= link_to "<i class=\"icon-ok icon-white\"></i> Completed".html_safe, "#", :class => "btn btn-success disable"
                      %td= history.parking_time
                    %td= history.remarks
                    %td.center
                      = link_to "<i class=\"icon-zoom-in icon-white\"></i>".html_safe, track_view_vehicle_path(history), :class => "btn btn-success"
                      = link_to "<i class=\"icon-trash icon-white\"></i>".html_safe, track_delete_vehicle_path(history), confirm: 'Are you sure?', method: :delete, :class => "btn btn-danger"
            -else
              %tbody
                %tr
                  %td{:colspan => "8"} No Vehicle Track Found 
      -if @history.present? 
        = will_paginate @history  
      #trackform.hidden           
        %h2
          %i.icon-search{:style => "bottom: 3px; position: relative;"}
          Track Vehicle                                      
          = render"trackform" 
      .clear 
      #message.hidden
        %h4
          %i.icon-warning-sign
          Plate number exists 
      .clear      
      #vehicleform.hidden
        %h2
          Vehicles                                   
          = render"vehicleform"  

:javascript
  $( document ).ready(function() {
    if (#{session[:button]} == 1 && #{!@vehicle.present?}){
      $("#trackform").addClass("hidden");
      $("#vehicleform").removeClass("hidden");
      $("#vehicle_platenumber").val($("#search_platenumber_like").val());
    }

    $( "#addlocation" ).click(function() {
      $("#trackform").removeClass("hidden");
      $("#vehicleform").addClass("hidden");
      $("#vehicle_history_platenumber").val("#{@vehicle[0].platenumber if @vehicle.present?}");
    }); 
  }); 

  $('.removebtn').click(function(){
      var id = $(this).attr("id");
      var time = $("#parking_"+id).text();
      var remarks = $("#remarks_"+id).text();
      var data = new Array();
      data[0]= $(this).attr("id");
      data[1]= $("#parking_"+id).text();
      save_time(data);  
  });

   $("#vehicle_save").click(function(){
      data = $("#vehicle_platenumber").val();
      search_platenumber(data);
      return false;
  });

  function save_time(data){
    return $.ajax({
      'beforeSend': function(xhr) { xhr.setRequestHeader('X-CSRF-Token', $("meta[name='csrf-token']").attr('content')); },
      url:'/vehicles/parking_time',
      type:"POST",
      dataType:'json',
      data: data,
      processData:false,
      success: function (json)
      {
        if(json["status"]==true)
          location.reload();
        else
          return false;
      },
      error: function (xhr, status)
      {
        return false;
      }
    });
  }          


  function search_platenumber(data){
    return $.ajax({
      'beforeSend': function(xhr) { xhr.setRequestHeader('X-CSRF-Token', $("meta[name='csrf-token']").attr('content')); },
      url:'/vehicles/search',
      type:"POST",
      dataType:'json',
      data: data,
      processData:false,
      success: function (json)
      {
        console.log(json["status"]);
        if(json["status"]== true){
          console.log("inside");
          $("#new_vehicle").submit();
        }
        else{
          $("#message").removeClass("hidden");
        }
      },
      error: function (xhr, status)
      {
        return false;
      }
    });
  }
  $(function() {
    $( "#vehicle_history_platenumber" ).autocomplete({
      source: '#{autocomplete_vehicles_path(:json)}',
      minLength: 2,
      focus: function(event, ui) {
    $('#vehicle_history_platenumber').val(ui.item.platenumber);
      return false;
    },
    select: function(event, ui) {
      $('#vehicle_history_platenumber').val(ui.item.platenumber);
      $('#vehicle_history_vehicle_id').val(ui.item.id);
        return false;
          }
        })
      .data( "autocomplete" )._renderItem = function( ul, item ) {
        console.log(item);
            return $( "<li></li>" )
                .data( "item.autocomplete", item )
                .append( "<a>" + item.platenumber + "</a>" )
                .appendTo( ul );
        };    
  $( "#search_platenumber_like" ).autocomplete({
      source: '#{autocomplete_vehicles_path(:json)}',
      minLength: 2,
      focus: function(event, ui) {
    $('#search_platenumber_like').val(ui.item.platenumber);
      return false;
    },
    select: function(event, ui) {
      $('#search_platenumber_like').val(ui.item.platenumber);
      $('#vehicle_history_vehicle_id').val(ui.item.id);
        return false;
          }
        })
      .data( "autocomplete" )._renderItem = function( ul, item ) {
        console.log(item);
            return $( "<li></li>" )
                .data( "item.autocomplete", item )
                .append( "<a>" + item.platenumber + "</a>" )
                .appendTo( ul );
        };        
    });          
:css 
  .allign {
    padding-right: 90px;
  }     

  .suggestion{
    font-size: 11px;
    color: #000000;
  }
  .search{
    height:28px!important;
    width:36px!important;
    margin-right:45px;
  }
  .shift{
    margin-right:5px;
  }
  .ui-autocomplete{
    background: #999999 !important;
  }
  .ui-autocomplete a:hover{
    cursor: pointer;
  }
  #vehicle{
    padding-left:50px;
    margin:20px 0;
  }
  #vehicle label{
    width:120px;
    display: inline-block;
  }
  #vehicle span{
    display: inline-block;
    width:120px;
  }
  .place{
    margin-top:15px;
  }

  #addlocation{
    margin-top:15px;
    margin-left:15px;
    margin-bottom:20px;
  }
  .hidden{
    display:none;
  }
  a.disable {
   pointer-events: none;
   cursor: default;
   opacity:0.65;
  }