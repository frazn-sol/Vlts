= form_for @customer_contact do |f|
  - if @customer_contact.errors.any?
    #error_explanation
      %h2= "#{pluralize(@customer_contact.errors.count, "error")} prohibited this customer_contact from being saved:"
      %ul
        - @customer_contact.errors.full_messages.each do |msg|
          %li= msg

  .field
    = f.label :first_name, {:class => 'required'}
    = f.text_field :first_name
  .field
    = f.label :middle_name
    = f.text_field :middle_name
  .field
    = f.label :last_name, {:class => 'required'}
    = f.text_field :last_name
  .field
    = f.label :Company_Name, {:class => 'required'}
    -if "#{params[:customer_id]}".present?
      = f.text_field :customer_id, :value => Customer.where(:id => "#{params[:customer_id]}")[0].company_name, :readonly => true
    -else  
      -if current_user.role == "admin"
        = f.collection_select(:customer_id, Customer.where(:delflag => false), :id, :company_name, { :include_blank => true })
      -else
        = f.collection_select(:customer_id, Customer.where(:user_id => "#{current_user.id}", :delflag => false), :id, :company_name, { :include_blank => true })     
  .field
    = f.label :designation, {:class => 'required'}
    = f.text_field :designation
  .field
    = f.label :phone, {:class => 'required'}
    = f.text_field :phone
    Number Format is xxx-xxxx-xxxx
  .field
    = f.label :cell, {:class => 'required'}
    = f.text_field :cell
    Number Format is xxxx-xxxx-xxx
  .field
    = f.label :email, {:class => 'required'}
    = f.text_field :email   
    = hidden_field "id", "customer_id", "value" => "#{params[:customer_id]}"
  .actions
    = f.submit 'Save', {:class => "button1"}
-if params[:id].present?    
  :javascript
    var validator = new FormValidator('edit_customer_contact_#{@customer_contact.id.to_s}', [{
      name: 'customer_contact[first_name]', 
      display:'First Name',   
      rules: 'required'
    }, {
      name: 'customer_contact[last_name]',
      display:'Last Name',
      rules: 'required'
    }, {
      name: 'customer_contact[customer_id]',
      display:'Company Name',
      rules: 'required'
    }, {
      name: 'customer_contact[designation]',
      display:'Designation',
      rules: 'required'
    }, {
      name: 'customer_contact[phone]',
      display:'Phone',
      rules: 'required|callback_check_phone'
    }, {
      name: 'customer_contact[cell]',
      display:'Cell',
      rules: 'required|callback_check_mobile'
    }, {
      name: 'customer_contact[email]',
      display:'Email',
      rules: 'callback_check_email|required'
    }], function(errors, event) {
      if (errors.length > 0) {
      var temp;
      $(":text").each(function(){
        $(this).css("border","#cccccc 1px solid");      
      });
      for (var i=0; i<errors.length; i++){
        temp = errors[i].id;
        $("#" + temp).css("border","1px solid red");
      }
      temp = errors[0].id;
      $( "#" + temp).focus();
      }  
    });   
    
    validator.registerCallback('check_email', function(value) {
      var emailReg = /^([\w-\.]+@([\w-]+\.)+[\w-]{2,4})?$/;
      if( !emailReg.test( value ) ) {
        return false;
      } else {
        return true;
      }
    })
    .setMessage('check_email', 'Please enter a valid email address.');

    validator.registerCallback('check_phone', function(value) {
      var phoneno = /^(\()?\d{3}(\))?(-|\s)?\d{4}(-|\s)\d{4}$/;  
      if( !value.match(phoneno) ) {
        return false;
      } else {
        return true;
      }
    })
    .setMessage('check_phone', 'Please enter number according to format');

    validator.registerCallback('check_mobile', function(value) {
      var mobileno = /^(\()?\d{4}(\))?(-|\s)?\d{4}(-|\s)\d{3}$/;  
      if( !value.match(mobileno) ) {
        return false;
      } else {
        return true;
      }
    })
    .setMessage('check_mobile', 'Please enter number according to format');  
-else  
  :javascript
    var validator = new FormValidator('new_customer_contact', [{
      name: 'customer_contact[first_name]', 
      display:'First Name',   
      rules: 'required'
    }, {
      name: 'customer_contact[last_name]',
      display:'Last Name',
      rules: 'required'
    }, {
      name: 'customer_contact[customer_id]',
      display:'Company Name',
      rules: 'required'
    }, {
      name: 'customer_contact[designation]',
      display:'Designation',
      rules: 'required'
    }, {
      name: 'customer_contact[phone]',
      display:'Phone',
      rules: 'required|callback_check_phone'
    }, {
      name: 'customer_contact[cell]',
      display:'Cell',
      rules: 'callback_check_mobile|required'
    }, {
      name: 'customer_contact[email]',
      display:'Email',
      rules: 'callback_check_email|required'
    }], function(errors, event) {
      if (errors.length > 0) {
      var temp;
      $(":text").each(function(){
        $(this).css("border","#cccccc 1px solid");      
      });
      for (var i=0; i<errors.length; i++){
        temp = errors[i].id;
        $("#" + temp).css("border","1px solid red");
      }
      temp = errors[0].id;
      $( "#" + temp).focus();
      }
    });  

    validator.registerCallback('check_email', function(value) {
      var emailReg = /^([\w-\.]+@([\w-]+\.)+[\w-]{2,4})?$/;
      if( !emailReg.test(value) ) {
        return false;
      } else {
        return true;
      }
    })
    .setMessage('check_email', 'Please enter a valid email address.');  

    validator.registerCallback('check_phone', function(value) {
      var phoneno = /^(\()?\d{3}(\))?(-|\s)?\d{4}(-|\s)\d{4}$/;  
      if( !value.match(phoneno) ) {
        return false;
      } else {
        return true;
      }
    })
    .setMessage('check_phone', 'Please enter number according to format');

    validator.registerCallback('check_mobile', function(value) {
      var mobileno = /^(\()?\d{4}(\))?(-|\s)?\d{4}(-|\s)\d{3}$/;  
      if( !value.match(mobileno) ) {
        return false;
      } else {
        return true;
      }
    })
    .setMessage('check_mobile', 'Please enter number according to format');