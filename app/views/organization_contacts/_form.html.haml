  = form_for @organization_contact do |f|
  - if @organization_contact.errors.any?
    #error_explanation
      %h2= "#{pluralize(@organization_contact.errors.count, "error")} prohibited this organization_contact from being saved:"
      %ul
        - @organization_contact.errors.full_messages.each do |msg|
          %li= msg

  .field
    = f.label :first_name, {:class => 'required'}
    = f.text_field :first_name, {:class => 'required'}
  .field
    = f.label :middle_name
    = f.text_field :middle_name
  .field
    = f.label :last_name, {:class => 'required'}
    = f.text_field :last_name
  .field
    = f.label :Organization_Name, {:class => 'required'}
    -if "#{params[:org_id]}".present?
      = f.text_field :organization_id, :value => Organization.where(:id => "#{params[:org_id]}")[0].company_name, :readonly => true
    -else  
      -if current_user.role == "customer"
        = f.collection_select(:organization_id, Organization.where(:user_id => "#{current_user.id}", :delflag => false), :id, :company_name,{ :include_blank => true })
      -else
        = f.collection_select(:organization_id, Organization.where(:user_id => "#{current_user.id}", :delflag => false) + Organization.where(:user_id => "#{current_user.parent_id}", :delflag => false), :id, :company_name, { :include_blank => true })   
  .field
    = f.label :designation, {:class => 'required'}
    = f.text_field :designation
  .field
    = f.label :phone, {:class => 'required'}
    = f.text_field :phone
  .field
    = f.label :cell, {:class => 'required'}
    = f.text_field :cell
  .field
    = f.label :email, {:class => 'required'}
    = f.text_field :email
    = hidden_field "id", "org_id", "value" => "#{params[:org_id]}"
  .actions
    = f.submit 'Save', {:class => "button1"}

-if params[:id].present?
  :javascript
    var validator = new FormValidator('edit_organization_contact_#{@organization_contact.id.to_s}', [{
      name: 'organization_contact[first_name]',
      display:'First Name',    
      rules: 'required'
    }, {
      name: 'organization_contact[last_name]',
      display:'Last Name',
      rules: 'required'
    },{
      name: 'organization_contact[organization_id]',
      display:'Organization Name',
      rules: 'required'
    }, {
      name: 'organization_contact[designation]',
      display:'Designation',
      rules: 'required'
    }, {
      name: 'organization_contact[phone]',
      display:'Phone',
      rules: 'required'
    }, {
      name: 'organization_contact[cell]',
      display:'Cell',
      rules: 'required|numeric'
    }, {
      name: 'organization_contact[email]',
      display:'Email',
      rules: 'required|callback_check_email'
    }], function(errors, event) {
      if (errors.length > 0) {
      var temp;
      $(":text").each(function(){
        $(this).css("border","#cccccc 1px solid");      
      });
      for (var i=0; i<errors.length; i++){
        temp = errors[i].id;
        $("#" + temp).css("border","1px solid red");
      }
      temp = errors[0].id;
      $( "#" + temp).focus();
      }  
    });  
-else  
  :javascript
    var validator = new FormValidator('new_organization_contact', [{
      name: 'organization_contact[first_name]',
      display:'First Name',    
      rules: 'required'
    }, {
      name: 'organization_contact[last_name]',
      display:'Last Name',
      rules: 'required'
    },{
      name: 'organization_contact[organization_id]',
      display:'Organization Name',
      rules: 'required'
    }, {
      name: 'organization_contact[designation]',
      display:'Designation',
      rules: 'required'
    }, {
      name: 'organization_contact[phone]',
      display:'Phone',
      rules: 'required'
    }, {
      name: 'organization_contact[cell]',
      display:'Cell',
      rules: 'required|numeric'
    }, {
      name: 'organization_contact[email]',
      display:'Email',
      rules: 'required|callback_check_email'
    }], function(errors, event) {
      if (errors.length > 0) {
      var temp;
      $(":text").each(function(){
        $(this).css("border","#cccccc 1px solid");      
      });
      for (var i=0; i<errors.length; i++){
        temp = errors[i].id;
        $("#" + temp).css("border","1px solid red");
      }
      temp = errors[0].id;
      $( "#" + temp).focus();
      }  
    });  
    validator.registerCallback('check_email', function(value) {
      var emailReg = /^([\w-\.]+@([\w-]+\.)+[\w-]{2,4})?$/;
      if( !emailReg.test( value ) ) {
        return false;
      } else {
        return true;
      }
    })
    .setMessage('check_email', 'Please enter a valid email address.');