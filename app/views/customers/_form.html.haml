= form_for @customer do |f|
  - if @customer.errors.any?
    #error_explanation
      %h2= "#{pluralize(@customer.errors.count, "error")} prohibited this customer from being saved:"
      %ul
        - @customer.errors.full_messages.each do |msg|
          %li= msg

  .field
    = f.label :company_name, {:class => 'required'}
    = f.text_field :company_name
  .field
    = f.label :address1, {:class => 'required'}
    = f.text_field :address1
  .field
    = f.label :address2
    = f.text_field :address2
  .field
    = f.label :city, {:class => 'required'}
    = f.text_field :city
  .field
    = f.label :state, {:class => 'required'}
    = f.text_field :state
  .field
    = f.label :zipcode, {:class => 'required'}
    = f.text_field :zipcode
  .field
    = f.label :phone1, {:class => 'required'}
    = f.text_field :phone1
    Number Format is xxx-xxxx-xxxx
  .field
    = f.label :phone2
    = f.text_field :phone2
    Number Format is xxx-xxxx-xxxx
  .field
    = f.label :web
    = f.text_field :web
  .field
    = f.fields_for :user do |user|  
      .field
        = user.label :email, {:class => 'required'}
        = user.text_field :email
      .field
        = user.label :password, {:class => 'required'}
        = user.password_field :password
      .field
        = user.label :passwordhint
        = user.text_field :passwordhint      
  .actions
    = f.submit 'Save', {:class => "button1"}

:javascript
  var validator = new FormValidator('new_customer', [{
    name: 'customer[company_name]', 
    display:'Company Name',   
    rules: 'required'
  }, {
    name: 'customer[address1]',
    display:'Address1',
    rules: 'required'
  }, {
    name: 'customer[city]',
    display:'City',
    rules: 'required'
  }, {
    name: 'customer[state]',
    display:'State',
    rules: 'required'
  }, {
    name: 'customer[zipcode]',
    display:'Zipcode',
    rules: 'numeric|required'
  }, {
    name: 'customer[phone1]',
    display:'Phone1',
    rules: 'callback_check_phone|required'
  }, {
    name: 'customer[phone2]',
    display:'Phone1',
    rules: 'callback_check_phone'
  }, {
    name: 'customer[user][email]',
    display:'Email',
    rules: 'callback_check_email|required'
  }, {
    name: 'customer[user][password]',
    display:'Password',
    rules: 'required'
  }], function(errors, event) {
    if (errors.length > 0) {
    var temp;
    $(":text").each(function(){
        $(this).css("border","#cccccc 1px solid");      
      });
    for (var i=0; i<errors.length; i++){
      temp = errors[i].id;
      $("#" + temp).css("border","1px solid red");
    }
    temp = errors[0].id;
    $( "#" + temp).focus();
    }
  });    
  validator.registerCallback('check_email', function(value) {
    var emailReg = /^([\w-\.]+@([\w-]+\.)+[\w-]{2,4})?$/;
    if( !emailReg.test( value ) ) {
      return false;
    } else {
      return true;
    }
  })
  .setMessage('check_email', 'Please enter a valid email address.');
  
  validator.registerCallback('check_phone', function(value) {
      var phoneno = /^(\()?\d{3}(\))?(-|\s)?\d{4}(-|\s)\d{4}$/;  
      if( !value.match(phoneno) ) {
        return false;
      } else {
        return true;
      }
    })
  .setMessage('check_phone', 'Please enter number according to format');
